syntax = "proto3";

package order;
option go_package="./order";

message OrderContent {
    int64 OrderId = 1;
    int64 UserId = 2;
    int64 TotalPrice = 3;
    string Status = 4;
    string Unit  = 5;
    string RequestId = 6;
    int64 CreatedAt = 7;
    string PaypalOrderId = 8;
}

message OrderItem {
    int64 ProductId = 1;
    string ProductDescription = 2;
    int64 ColorId = 3;
    string Color = 4;
    string ProductColorCoverUrl = 5;
    string Size = 6;
    int64 Qunantity = 7;   
    int64 Price = 8;
    int64 OrderItemId = 9;
}

message OrderAddress {
    string AddressLine1 = 1;
    string AddressLine2 = 2;
    string AdminArea1 = 3;
    string AdminArea2 = 4;
    string PostalCode = 5;
    string CountryCode = 6;
    string Email = 7;
    string FullName = 8;
}

message GetOrderAddressRequest {
    int64 UserId = 1;
    int64 OrderId = 2;
}

message GetOrderAddressResponse {
    OrderAddress Address = 1;
}

message CreateOrderRequest {
    string RequestId = 1;
    int64 UserId = 2;
    repeated OrderItem Items = 3;
    int64 OrderId = 4;
}

message CreateOrderResponse {
    int64 OrderId = 1; 
}

message GetOrderRequest {
    int64 UserId = 1;
    int64 OrderId = 2;
}

message GetOrderResponse {
    OrderContent Order = 1;
    repeated OrderItem OrderItems = 2;
}

message UpdateOrderRequest {
    int64 OrderId = 1;
    int64 UserId = 2;
    optional string Status = 3;
}

message UpdateOrderResponse {
    string Status = 1;
}

message PayOrderRequest {
    int64 OrderId = 1;
    int64 UserId = 2;
}

message PayOrderResponse {
    string Status = 1;
}

message GetOrderListRequest {
    int64 UserId = 1;
    int64 Page = 2;
    int64 PageSize = 3;
}

message GetOrderListResponse {
    repeated OrderContent Order = 1;
    int64 Total = 2;
}

message Paypal {
    int64 Id = 1;
    int64 OrderId = 2;
    string RequestId = 3;
    string PaypalOrderId = 4;
}

message PaypalOrderReuqest {
    int64 OrderId = 1;
    int64 UserId = 2;
}

message PaypalOrderResponse {
    Paypal Paypal = 1;
}

message CreatePaypalOrderRequest {
    string RequestId = 1;
    int64 OrderId = 2;
    int64 UserId = 3;
}

message CreatePaypalOrderResponse {
    int64 OrderId = 1;
    string PaypalOrderId = 2;
}

message CapturePaypalOrderRequest {
    string PaypalOrderId = 2;
    int64 OrderId = 3;
    int64 UserId = 4;
}

message PayerName {
    string GivenName = 1;
    string Surname = 2;
}

message PayerPhone {
    string PhoneType = 1;
    string PhoneNumber = 2;
}

message PayerTaxInfo {
    string TaxId = 1;
    string TaxIdType = 2;
}

message PayerAddress {
    string AddressLine1 = 1;
    string AddressLine2 = 2;
    string AdminArea1 = 3;
    string AdminArea2 = 4;
    string PostalCode = 5;
    string CountryCode = 6;
}

message PaypalPayer {
    string Email = 1;
    string PayerFullName = 4;
    PayerTaxInfo PayerTaxInfo = 6;
    PayerAddress PayerAddress = 7;
}

message CapturePaypalOrderResposne {
    int64 OrderId = 1;
    string PaypalOrderId = 2;
    string Status = 3;
    string Intent = 4;
    string CreateTime = 5;
    string RequestId = 6;
    PaypalPayer PayerInfo = 7;
}

message DeleteOrderRequest {
    int64 OrderId = 1;
    int64 UserId = 2;
}

message DeleteOrderResponse {
    int64 OrderId = 1;
}

message GetOrderItemRequest {
    int64 OrderId = 1;
    int64 UserId = 2;
}

message CheckOrderIdempotentRequest {
    string RequestId = 1;
}

message CheckOrderIdempotentResponse {
    bool IsIdempotent = 1;
}

message GetOrderItemResponse {
    repeated OrderItem OrderItems = 1;
    int64 TotalItems = 2;
}

message CheckOrderBelongTouserRequest {
    int64 OrderId = 1;
    int64 UserId = 2;
}

message CheckOrderBelongTouserResponse {
    bool IsBelong = 1;
}

service order {
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
    rpc CreateOrderRollback(CreateOrderRequest) returns (CreateOrderResponse);
    rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse);
    rpc DeleteOrderRollback(DeleteOrderRequest) returns (DeleteOrderResponse);
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
    rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);
    rpc PayOrder(PayOrderRequest) returns (PayOrderResponse);
    rpc OrderList(GetOrderListRequest) returns (GetOrderListResponse);
    rpc PaypalOrder(PaypalOrderReuqest) returns (PaypalOrderResponse);
    rpc CreatePaypalOrder(CreatePaypalOrderRequest) returns (CreatePaypalOrderResponse);
    rpc CaptureOrder(CapturePaypalOrderRequest) returns (CapturePaypalOrderResposne);
    rpc OrderAddress(GetOrderAddressRequest) returns (GetOrderAddressResponse);
    rpc GetOrderItem(GetOrderItemRequest) returns (GetOrderItemResponse);
    rpc CheckOrderIdempotent(CheckOrderIdempotentRequest) returns (CheckOrderIdempotentResponse);
    rpc CheckOrderBelongToUser(CheckOrderBelongTouserRequest) returns (CheckOrderBelongTouserResponse);
}
