// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: organizer.proto

package organizerclient

import (
	"context"

	"ymir.com/app/organizer/rpc/organizer"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetOrganizerRequest  = organizer.GetOrganizerRequest
	GetorganizerResponse = organizer.GetorganizerResponse

	Organizer interface {
		GetOrganizer(ctx context.Context, in *GetOrganizerRequest, opts ...grpc.CallOption) (*GetorganizerResponse, error)
	}

	defaultOrganizer struct {
		cli zrpc.Client
	}
)

func NewOrganizer(cli zrpc.Client) Organizer {
	return &defaultOrganizer{
		cli: cli,
	}
}

func (m *defaultOrganizer) GetOrganizer(ctx context.Context, in *GetOrganizerRequest, opts ...grpc.CallOption) (*GetorganizerResponse, error) {
	client := organizer.NewOrganizerClient(m.cli.Conn())
	return client.GetOrganizer(ctx, in, opts...)
}
