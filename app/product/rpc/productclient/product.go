// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: product.proto

package productclient

import (
	"context"

	"ymir.com/app/product/rpc/product"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddProductAmountInCartRequest       = product.AddProductAmountInCartRequest
	AddProductAmountInCartResponse      = product.AddProductAmountInCartResponse
	AddProductToCartRequest             = product.AddProductToCartRequest
	AddProductToCartResponse            = product.AddProductToCartResponse
	DecreaseProductAmountInCartRequest  = product.DecreaseProductAmountInCartRequest
	DecreaseProductAmountInCartResponse = product.DecreaseProductAmountInCartResponse
	DecreaseProductStockRequest         = product.DecreaseProductStockRequest
	DecreaseProductStockResponse        = product.DecreaseProductStockResponse
	IncreaseProductStockRequest         = product.IncreaseProductStockRequest
	IncreaseProductStockResposne        = product.IncreaseProductStockResposne
	ProducrtsInCartListResponse         = product.ProducrtsInCartListResponse
	ProductColor                        = product.ProductColor
	ProductColorListRequest             = product.ProductColorListRequest
	ProductColorListResponse            = product.ProductColorListResponse
	ProductColorRequest                 = product.ProductColorRequest
	ProductColorResponse                = product.ProductColorResponse
	ProductComment                      = product.ProductComment
	ProductCommentListRequest           = product.ProductCommentListRequest
	ProductCommentListResponse          = product.ProductCommentListResponse
	ProductCoverUrlRequest              = product.ProductCoverUrlRequest
	ProductCoverUrlResponse             = product.ProductCoverUrlResponse
	ProductDetailReqeust                = product.ProductDetailReqeust
	ProductDetailResponse               = product.ProductDetailResponse
	ProductListColorItem                = product.ProductListColorItem
	ProductListItem                     = product.ProductListItem
	ProductListRequest                  = product.ProductListRequest
	ProductListResponse                 = product.ProductListResponse
	ProductStockItem                    = product.ProductStockItem
	ProductStockRequest                 = product.ProductStockRequest
	ProductStockResponse                = product.ProductStockResponse
	ProductsInCartListItem              = product.ProductsInCartListItem
	ProductsInCartListRequest           = product.ProductsInCartListRequest
	RemoveProductFromCartRequest        = product.RemoveProductFromCartRequest
	RemoveProductFromCartResponse       = product.RemoveProductFromCartResponse

	Product interface {
		ProductList(ctx context.Context, in *ProductListRequest, opts ...grpc.CallOption) (*ProductListResponse, error)
		ProductDetail(ctx context.Context, in *ProductDetailReqeust, opts ...grpc.CallOption) (*ProductDetailResponse, error)
		ProductsInCartList(ctx context.Context, in *ProductsInCartListRequest, opts ...grpc.CallOption) (*ProducrtsInCartListResponse, error)
		AddProductAmountInCart(ctx context.Context, in *AddProductAmountInCartRequest, opts ...grpc.CallOption) (*AddProductAmountInCartResponse, error)
		DecreaseProductAmountInCart(ctx context.Context, in *DecreaseProductAmountInCartRequest, opts ...grpc.CallOption) (*AddProductAmountInCartResponse, error)
		AddProductToCart(ctx context.Context, in *AddProductToCartRequest, opts ...grpc.CallOption) (*AddProductToCartResponse, error)
		RemoveProductFromCart(ctx context.Context, in *RemoveProductFromCartRequest, opts ...grpc.CallOption) (*RemoveProductFromCartResponse, error)
		ProductStock(ctx context.Context, in *ProductStockRequest, opts ...grpc.CallOption) (*ProductStockResponse, error)
		ProductColor(ctx context.Context, in *ProductColorRequest, opts ...grpc.CallOption) (*ProductColorResponse, error)
		ProductColorList(ctx context.Context, in *ProductColorListRequest, opts ...grpc.CallOption) (*ProductColorListResponse, error)
		ProductCommentList(ctx context.Context, in *ProductCommentListRequest, opts ...grpc.CallOption) (*ProductCommentListResponse, error)
		IncreaseProductStockOfOrder(ctx context.Context, in *DecreaseProductStockRequest, opts ...grpc.CallOption) (*DecreaseProductStockResponse, error)
		DecreaseProductStockOfOrder(ctx context.Context, in *DecreaseProductStockRequest, opts ...grpc.CallOption) (*DecreaseProductStockResponse, error)
	}

	defaultProduct struct {
		cli zrpc.Client
	}
)

func NewProduct(cli zrpc.Client) Product {
	return &defaultProduct{
		cli: cli,
	}
}

func (m *defaultProduct) ProductList(ctx context.Context, in *ProductListRequest, opts ...grpc.CallOption) (*ProductListResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductList(ctx, in, opts...)
}

func (m *defaultProduct) ProductDetail(ctx context.Context, in *ProductDetailReqeust, opts ...grpc.CallOption) (*ProductDetailResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductDetail(ctx, in, opts...)
}

func (m *defaultProduct) ProductsInCartList(ctx context.Context, in *ProductsInCartListRequest, opts ...grpc.CallOption) (*ProducrtsInCartListResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductsInCartList(ctx, in, opts...)
}

func (m *defaultProduct) AddProductAmountInCart(ctx context.Context, in *AddProductAmountInCartRequest, opts ...grpc.CallOption) (*AddProductAmountInCartResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.AddProductAmountInCart(ctx, in, opts...)
}

func (m *defaultProduct) DecreaseProductAmountInCart(ctx context.Context, in *DecreaseProductAmountInCartRequest, opts ...grpc.CallOption) (*AddProductAmountInCartResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.DecreaseProductAmountInCart(ctx, in, opts...)
}

func (m *defaultProduct) AddProductToCart(ctx context.Context, in *AddProductToCartRequest, opts ...grpc.CallOption) (*AddProductToCartResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.AddProductToCart(ctx, in, opts...)
}

func (m *defaultProduct) RemoveProductFromCart(ctx context.Context, in *RemoveProductFromCartRequest, opts ...grpc.CallOption) (*RemoveProductFromCartResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.RemoveProductFromCart(ctx, in, opts...)
}

func (m *defaultProduct) ProductStock(ctx context.Context, in *ProductStockRequest, opts ...grpc.CallOption) (*ProductStockResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductStock(ctx, in, opts...)
}

func (m *defaultProduct) ProductColor(ctx context.Context, in *ProductColorRequest, opts ...grpc.CallOption) (*ProductColorResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductColor(ctx, in, opts...)
}

func (m *defaultProduct) ProductColorList(ctx context.Context, in *ProductColorListRequest, opts ...grpc.CallOption) (*ProductColorListResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductColorList(ctx, in, opts...)
}

func (m *defaultProduct) ProductCommentList(ctx context.Context, in *ProductCommentListRequest, opts ...grpc.CallOption) (*ProductCommentListResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.ProductCommentList(ctx, in, opts...)
}

func (m *defaultProduct) IncreaseProductStockOfOrder(ctx context.Context, in *DecreaseProductStockRequest, opts ...grpc.CallOption) (*DecreaseProductStockResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.IncreaseProductStockOfOrder(ctx, in, opts...)
}

func (m *defaultProduct) DecreaseProductStockOfOrder(ctx context.Context, in *DecreaseProductStockRequest, opts ...grpc.CallOption) (*DecreaseProductStockResponse, error) {
	client := product.NewProductClient(m.cli.Conn())
	return client.DecreaseProductStockOfOrder(ctx, in, opts...)
}
