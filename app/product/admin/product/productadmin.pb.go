// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.3
// source: productadmin.proto

package product

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StarId *int64 `protobuf:"varint,1,opt,name=StarId,proto3,oneof" json:"StarId,omitempty"`
}

func (x *ProductCountRequest) Reset() {
	*x = ProductCountRequest{}
	mi := &file_productadmin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCountRequest) ProtoMessage() {}

func (x *ProductCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCountRequest.ProtoReflect.Descriptor instead.
func (*ProductCountRequest) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{0}
}

func (x *ProductCountRequest) GetStarId() int64 {
	if x != nil && x.StarId != nil {
		return *x.StarId
	}
	return 0
}

type ProductCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *ProductCountResponse) Reset() {
	*x = ProductCountResponse{}
	mi := &file_productadmin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCountResponse) ProtoMessage() {}

func (x *ProductCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCountResponse.ProtoReflect.Descriptor instead.
func (*ProductCountResponse) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{1}
}

func (x *ProductCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ProductListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StarId   *int64 `protobuf:"varint,1,opt,name=StarId,proto3,oneof" json:"StarId,omitempty"`
	Page     int64  `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize int64  `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *ProductListRequest) Reset() {
	*x = ProductListRequest{}
	mi := &file_productadmin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListRequest) ProtoMessage() {}

func (x *ProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListRequest.ProtoReflect.Descriptor instead.
func (*ProductListRequest) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{2}
}

func (x *ProductListRequest) GetStarId() int64 {
	if x != nil && x.StarId != nil {
		return *x.StarId
	}
	return 0
}

func (x *ProductListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProductListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ProductListColorItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoverUrl string `protobuf:"bytes,1,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	Price    int64  `protobuf:"varint,2,opt,name=Price,proto3" json:"Price,omitempty"`
	Unit     string `protobuf:"bytes,3,opt,name=Unit,proto3" json:"Unit,omitempty"`
}

func (x *ProductListColorItem) Reset() {
	*x = ProductListColorItem{}
	mi := &file_productadmin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductListColorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListColorItem) ProtoMessage() {}

func (x *ProductListColorItem) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListColorItem.ProtoReflect.Descriptor instead.
func (*ProductListColorItem) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{3}
}

func (x *ProductListColorItem) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ProductListColorItem) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductListColorItem) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type ProductListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Description  string                `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Name         string                `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	CreatedAt    int64                 `protobuf:"varint,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	Rate         float64               `protobuf:"fixed64,6,opt,name=Rate,proto3" json:"Rate,omitempty"`
	RateCount    int64                 `protobuf:"varint,7,opt,name=RateCount,proto3" json:"RateCount,omitempty"`
	DefaultColor *ProductListColorItem `protobuf:"bytes,8,opt,name=DefaultColor,proto3" json:"DefaultColor,omitempty"`
}

func (x *ProductListItem) Reset() {
	*x = ProductListItem{}
	mi := &file_productadmin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListItem) ProtoMessage() {}

func (x *ProductListItem) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListItem.ProtoReflect.Descriptor instead.
func (*ProductListItem) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{4}
}

func (x *ProductListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductListItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProductListItem) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ProductListItem) GetRateCount() int64 {
	if x != nil {
		return x.RateCount
	}
	return 0
}

func (x *ProductListItem) GetDefaultColor() *ProductListColorItem {
	if x != nil {
		return x.DefaultColor
	}
	return nil
}

type ProductListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*ProductListItem `protobuf:"bytes,1,rep,name=Products,proto3" json:"Products,omitempty"`
	Total    int64              `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *ProductListResponse) Reset() {
	*x = ProductListResponse{}
	mi := &file_productadmin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListResponse) ProtoMessage() {}

func (x *ProductListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListResponse.ProtoReflect.Descriptor instead.
func (*ProductListResponse) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{5}
}

func (x *ProductListResponse) GetProducts() []*ProductListItem {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *ProductListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StarId         int64   `protobuf:"varint,1,opt,name=StarId,proto3" json:"StarId,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description    string  `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Detail         *string `protobuf:"bytes,6,opt,name=Detail,proto3,oneof" json:"Detail,omitempty"`
	DefaultColorId int64   `protobuf:"varint,7,opt,name=DefaultColorId,proto3" json:"DefaultColorId,omitempty"`
	ProductId      int64   `protobuf:"varint,8,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
}

func (x *CreateProductRequest) Reset() {
	*x = CreateProductRequest{}
	mi := &file_productadmin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductRequest) ProtoMessage() {}

func (x *CreateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductRequest.ProtoReflect.Descriptor instead.
func (*CreateProductRequest) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{6}
}

func (x *CreateProductRequest) GetStarId() int64 {
	if x != nil {
		return x.StarId
	}
	return 0
}

func (x *CreateProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProductRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProductRequest) GetDetail() string {
	if x != nil && x.Detail != nil {
		return *x.Detail
	}
	return ""
}

func (x *CreateProductRequest) GetDefaultColorId() int64 {
	if x != nil {
		return x.DefaultColorId
	}
	return 0
}

func (x *CreateProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type CreateProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *CreateProductResponse) Reset() {
	*x = CreateProductResponse{}
	mi := &file_productadmin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductResponse) ProtoMessage() {}

func (x *CreateProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductResponse.ProtoReflect.Descriptor instead.
func (*CreateProductResponse) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{7}
}

func (x *CreateProductResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateProductColorRequeset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId       int64  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	ColorName       string `protobuf:"bytes,2,opt,name=ColorName,proto3" json:"ColorName,omitempty"`
	CoverUrl        string `protobuf:"bytes,3,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	ImageUrl        string `protobuf:"bytes,4,opt,name=ImageUrl,proto3" json:"ImageUrl,omitempty"`
	DetailImagesUrl string `protobuf:"bytes,5,opt,name=DetailImagesUrl,proto3" json:"DetailImagesUrl,omitempty"`
	Price           int64  `protobuf:"varint,6,opt,name=Price,proto3" json:"Price,omitempty"`
	Unit            string `protobuf:"bytes,7,opt,name=Unit,proto3" json:"Unit,omitempty"`
	Size            string `protobuf:"bytes,8,opt,name=Size,proto3" json:"Size,omitempty"`
	InStock         int64  `protobuf:"varint,9,opt,name=InStock,proto3" json:"InStock,omitempty"`
	IsDefault       bool   `protobuf:"varint,10,opt,name=IsDefault,proto3" json:"IsDefault,omitempty"`
	ProductColorId  int64  `protobuf:"varint,11,opt,name=ProductColorId,proto3" json:"ProductColorId,omitempty"`
}

func (x *CreateProductColorRequeset) Reset() {
	*x = CreateProductColorRequeset{}
	mi := &file_productadmin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductColorRequeset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductColorRequeset) ProtoMessage() {}

func (x *CreateProductColorRequeset) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductColorRequeset.ProtoReflect.Descriptor instead.
func (*CreateProductColorRequeset) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{8}
}

func (x *CreateProductColorRequeset) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateProductColorRequeset) GetColorName() string {
	if x != nil {
		return x.ColorName
	}
	return ""
}

func (x *CreateProductColorRequeset) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *CreateProductColorRequeset) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CreateProductColorRequeset) GetDetailImagesUrl() string {
	if x != nil {
		return x.DetailImagesUrl
	}
	return ""
}

func (x *CreateProductColorRequeset) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateProductColorRequeset) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CreateProductColorRequeset) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CreateProductColorRequeset) GetInStock() int64 {
	if x != nil {
		return x.InStock
	}
	return 0
}

func (x *CreateProductColorRequeset) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CreateProductColorRequeset) GetProductColorId() int64 {
	if x != nil {
		return x.ProductColorId
	}
	return 0
}

type CreateProductColorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *CreateProductColorResponse) Reset() {
	*x = CreateProductColorResponse{}
	mi := &file_productadmin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductColorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductColorResponse) ProtoMessage() {}

func (x *CreateProductColorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductColorResponse.ProtoReflect.Descriptor instead.
func (*CreateProductColorResponse) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{9}
}

func (x *CreateProductColorResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateProductColorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ColorName       *string `protobuf:"bytes,2,opt,name=ColorName,proto3,oneof" json:"ColorName,omitempty"`
	CoverUrl        *string `protobuf:"bytes,3,opt,name=CoverUrl,proto3,oneof" json:"CoverUrl,omitempty"`
	ImageUrl        *string `protobuf:"bytes,4,opt,name=ImageUrl,proto3,oneof" json:"ImageUrl,omitempty"`
	DetailImagesUrl *string `protobuf:"bytes,5,opt,name=DetailImagesUrl,proto3,oneof" json:"DetailImagesUrl,omitempty"`
	Price           *int64  `protobuf:"varint,6,opt,name=Price,proto3,oneof" json:"Price,omitempty"`
	Unit            *string `protobuf:"bytes,7,opt,name=Unit,proto3,oneof" json:"Unit,omitempty"`
	Size            *string `protobuf:"bytes,8,opt,name=Size,proto3,oneof" json:"Size,omitempty"`
	ProductId       *int64  `protobuf:"varint,9,opt,name=ProductId,proto3,oneof" json:"ProductId,omitempty"`
}

func (x *UpdateProductColorRequest) Reset() {
	*x = UpdateProductColorRequest{}
	mi := &file_productadmin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductColorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductColorRequest) ProtoMessage() {}

func (x *UpdateProductColorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductColorRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductColorRequest) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateProductColorRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateProductColorRequest) GetColorName() string {
	if x != nil && x.ColorName != nil {
		return *x.ColorName
	}
	return ""
}

func (x *UpdateProductColorRequest) GetCoverUrl() string {
	if x != nil && x.CoverUrl != nil {
		return *x.CoverUrl
	}
	return ""
}

func (x *UpdateProductColorRequest) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *UpdateProductColorRequest) GetDetailImagesUrl() string {
	if x != nil && x.DetailImagesUrl != nil {
		return *x.DetailImagesUrl
	}
	return ""
}

func (x *UpdateProductColorRequest) GetPrice() int64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *UpdateProductColorRequest) GetUnit() string {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return ""
}

func (x *UpdateProductColorRequest) GetSize() string {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return ""
}

func (x *UpdateProductColorRequest) GetProductId() int64 {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return 0
}

type UpdateProductColorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *UpdateProductColorResponse) Reset() {
	*x = UpdateProductColorResponse{}
	mi := &file_productadmin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductColorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductColorResponse) ProtoMessage() {}

func (x *UpdateProductColorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductColorResponse.ProtoReflect.Descriptor instead.
func (*UpdateProductColorResponse) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateProductColorResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateProductColorStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId           int64  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	ColorId             int64  `protobuf:"varint,2,opt,name=ColorId,proto3" json:"ColorId,omitempty"`
	InStock             int64  `protobuf:"varint,3,opt,name=InStock,proto3" json:"InStock,omitempty"`
	Size                string `protobuf:"bytes,4,opt,name=Size,proto3" json:"Size,omitempty"`
	ProductColorStockId int64  `protobuf:"varint,5,opt,name=ProductColorStockId,proto3" json:"ProductColorStockId,omitempty"`
}

func (x *CreateProductColorStockRequest) Reset() {
	*x = CreateProductColorStockRequest{}
	mi := &file_productadmin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductColorStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductColorStockRequest) ProtoMessage() {}

func (x *CreateProductColorStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductColorStockRequest.ProtoReflect.Descriptor instead.
func (*CreateProductColorStockRequest) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{12}
}

func (x *CreateProductColorStockRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateProductColorStockRequest) GetColorId() int64 {
	if x != nil {
		return x.ColorId
	}
	return 0
}

func (x *CreateProductColorStockRequest) GetInStock() int64 {
	if x != nil {
		return x.InStock
	}
	return 0
}

func (x *CreateProductColorStockRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CreateProductColorStockRequest) GetProductColorStockId() int64 {
	if x != nil {
		return x.ProductColorStockId
	}
	return 0
}

type CreateProductColorStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *CreateProductColorStockResponse) Reset() {
	*x = CreateProductColorStockResponse{}
	mi := &file_productadmin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductColorStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductColorStockResponse) ProtoMessage() {}

func (x *CreateProductColorStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductColorStockResponse.ProtoReflect.Descriptor instead.
func (*CreateProductColorStockResponse) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{13}
}

func (x *CreateProductColorStockResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int64 `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
}

func (x *DeleteProductRequest) Reset() {
	*x = DeleteProductRequest{}
	mi := &file_productadmin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductRequest) ProtoMessage() {}

func (x *DeleteProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductRequest) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type DeleteProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int64 `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
}

func (x *DeleteProductResponse) Reset() {
	*x = DeleteProductResponse{}
	mi := &file_productadmin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductResponse) ProtoMessage() {}

func (x *DeleteProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductResponse.ProtoReflect.Descriptor instead.
func (*DeleteProductResponse) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteProductResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type DeleteProductColorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColorId int64 `protobuf:"varint,1,opt,name=ColorId,proto3" json:"ColorId,omitempty"`
}

func (x *DeleteProductColorRequest) Reset() {
	*x = DeleteProductColorRequest{}
	mi := &file_productadmin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductColorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductColorRequest) ProtoMessage() {}

func (x *DeleteProductColorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductColorRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductColorRequest) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteProductColorRequest) GetColorId() int64 {
	if x != nil {
		return x.ColorId
	}
	return 0
}

type DeleteProductColorResposne struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColorId int64 `protobuf:"varint,1,opt,name=ColorId,proto3" json:"ColorId,omitempty"`
}

func (x *DeleteProductColorResposne) Reset() {
	*x = DeleteProductColorResposne{}
	mi := &file_productadmin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductColorResposne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductColorResposne) ProtoMessage() {}

func (x *DeleteProductColorResposne) ProtoReflect() protoreflect.Message {
	mi := &file_productadmin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductColorResposne.ProtoReflect.Descriptor instead.
func (*DeleteProductColorResposne) Descriptor() ([]byte, []int) {
	return file_productadmin_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteProductColorResposne) GetColorId() int64 {
	if x != nil {
		return x.ColorId
	}
	return 0
}

var File_productadmin_proto protoreflect.FileDescriptor

var file_productadmin_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x3d, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x53, 0x74, 0x61, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x53, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x55, 0x6e, 0x69, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f,
	0x0a, 0x0c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0x5f, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xd2, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0xd8,
	0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x6e, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x95, 0x03, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x55, 0x72, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x53, 0x69, 0x7a,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x2c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0xb8, 0x01,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x6e, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x35, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0x36, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x6e, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x32, 0xd1, 0x04, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x65, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_productadmin_proto_rawDescOnce sync.Once
	file_productadmin_proto_rawDescData = file_productadmin_proto_rawDesc
)

func file_productadmin_proto_rawDescGZIP() []byte {
	file_productadmin_proto_rawDescOnce.Do(func() {
		file_productadmin_proto_rawDescData = protoimpl.X.CompressGZIP(file_productadmin_proto_rawDescData)
	})
	return file_productadmin_proto_rawDescData
}

var file_productadmin_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_productadmin_proto_goTypes = []any{
	(*ProductCountRequest)(nil),             // 0: admin.ProductCountRequest
	(*ProductCountResponse)(nil),            // 1: admin.ProductCountResponse
	(*ProductListRequest)(nil),              // 2: admin.ProductListRequest
	(*ProductListColorItem)(nil),            // 3: admin.ProductListColorItem
	(*ProductListItem)(nil),                 // 4: admin.ProductListItem
	(*ProductListResponse)(nil),             // 5: admin.ProductListResponse
	(*CreateProductRequest)(nil),            // 6: admin.CreateProductRequest
	(*CreateProductResponse)(nil),           // 7: admin.CreateProductResponse
	(*CreateProductColorRequeset)(nil),      // 8: admin.CreateProductColorRequeset
	(*CreateProductColorResponse)(nil),      // 9: admin.CreateProductColorResponse
	(*UpdateProductColorRequest)(nil),       // 10: admin.UpdateProductColorRequest
	(*UpdateProductColorResponse)(nil),      // 11: admin.UpdateProductColorResponse
	(*CreateProductColorStockRequest)(nil),  // 12: admin.CreateProductColorStockRequest
	(*CreateProductColorStockResponse)(nil), // 13: admin.CreateProductColorStockResponse
	(*DeleteProductRequest)(nil),            // 14: admin.DeleteProductRequest
	(*DeleteProductResponse)(nil),           // 15: admin.DeleteProductResponse
	(*DeleteProductColorRequest)(nil),       // 16: admin.DeleteProductColorRequest
	(*DeleteProductColorResposne)(nil),      // 17: admin.DeleteProductColorResposne
}
var file_productadmin_proto_depIdxs = []int32{
	3,  // 0: admin.ProductListItem.DefaultColor:type_name -> admin.ProductListColorItem
	4,  // 1: admin.ProductListResponse.Products:type_name -> admin.ProductListItem
	0,  // 2: admin.Product.ProductCount:input_type -> admin.ProductCountRequest
	2,  // 3: admin.Product.ProductList:input_type -> admin.ProductListRequest
	6,  // 4: admin.Product.CreateProduct:input_type -> admin.CreateProductRequest
	8,  // 5: admin.Product.CreateProductColor:input_type -> admin.CreateProductColorRequeset
	10, // 6: admin.Product.UpdateProductColor:input_type -> admin.UpdateProductColorRequest
	12, // 7: admin.Product.CreateProductColorStock:input_type -> admin.CreateProductColorStockRequest
	14, // 8: admin.Product.DeleteProduct:input_type -> admin.DeleteProductRequest
	1,  // 9: admin.Product.ProductCount:output_type -> admin.ProductCountResponse
	5,  // 10: admin.Product.ProductList:output_type -> admin.ProductListResponse
	7,  // 11: admin.Product.CreateProduct:output_type -> admin.CreateProductResponse
	9,  // 12: admin.Product.CreateProductColor:output_type -> admin.CreateProductColorResponse
	11, // 13: admin.Product.UpdateProductColor:output_type -> admin.UpdateProductColorResponse
	13, // 14: admin.Product.CreateProductColorStock:output_type -> admin.CreateProductColorStockResponse
	15, // 15: admin.Product.DeleteProduct:output_type -> admin.DeleteProductResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_productadmin_proto_init() }
func file_productadmin_proto_init() {
	if File_productadmin_proto != nil {
		return
	}
	file_productadmin_proto_msgTypes[0].OneofWrappers = []any{}
	file_productadmin_proto_msgTypes[2].OneofWrappers = []any{}
	file_productadmin_proto_msgTypes[6].OneofWrappers = []any{}
	file_productadmin_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_productadmin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_productadmin_proto_goTypes,
		DependencyIndexes: file_productadmin_proto_depIdxs,
		MessageInfos:      file_productadmin_proto_msgTypes,
	}.Build()
	File_productadmin_proto = out.File
	file_productadmin_proto_rawDesc = nil
	file_productadmin_proto_goTypes = nil
	file_productadmin_proto_depIdxs = nil
}
