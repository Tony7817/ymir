// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: useradmin.proto

package userclient

import (
	"context"

	"ymir.com/app/user/admin/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetOrganizerRequest  = user.GetOrganizerRequest
	GetOrganizerResponse = user.GetOrganizerResponse
	Organizer            = user.Organizer

	User interface {
		GetOrganizer(ctx context.Context, in *GetOrganizerRequest, opts ...grpc.CallOption) (*GetOrganizerResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) GetOrganizer(ctx context.Context, in *GetOrganizerRequest, opts ...grpc.CallOption) (*GetOrganizerResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetOrganizer(ctx, in, opts...)
}
