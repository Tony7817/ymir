// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package server

import (
	"context"

	"ymir.com/app/user/rpc/internal/logic"
	"ymir.com/app/user/rpc/internal/svc"
	"ymir.com/app/user/rpc/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) GetUserInfo(ctx context.Context, in *user.GetUserInfoRequest) (*user.GetUserInfoResponse, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UserServer) GetUserLocal(ctx context.Context, in *user.GetUserLocalRequest) (*user.GetUserLocalResponse, error) {
	l := logic.NewGetUserLocalLogic(ctx, s.svcCtx)
	return l.GetUserLocal(in)
}

func (s *UserServer) GetUserGoogle(ctx context.Context, in *user.GetUserGoogleRequest) (*user.GetUserGoogleResponse, error) {
	l := logic.NewGetUserGoogleLogic(ctx, s.svcCtx)
	return l.GetUserGoogle(in)
}

func (s *UserServer) SendCaptchaToEmail(ctx context.Context, in *user.SendCaptchaToEmailRequest) (*user.SendCaptchaToEmailResponse, error) {
	l := logic.NewSendCaptchaToEmailLogic(ctx, s.svcCtx)
	return l.SendCaptchaToEmail(in)
}

func (s *UserServer) SendCaptchaToPhonenumber(ctx context.Context, in *user.SendCaptchaToPhonenumberRequest) (*user.SendCaptchaToPhonenumberResponse, error) {
	l := logic.NewSendCaptchaToPhonenumberLogic(ctx, s.svcCtx)
	return l.SendCaptchaToPhonenumber(in)
}

func (s *UserServer) GetCaptchaByEmail(ctx context.Context, in *user.GetCaptchaByEmailRequest) (*user.GetCaptchaResponse, error) {
	l := logic.NewGetCaptchaByEmailLogic(ctx, s.svcCtx)
	return l.GetCaptchaByEmail(in)
}

func (s *UserServer) GetCaptchaByPhonenumber(ctx context.Context, in *user.GetCaptchaByPhonenumberRequest) (*user.GetCaptchaResponse, error) {
	l := logic.NewGetCaptchaByPhonenumberLogic(ctx, s.svcCtx)
	return l.GetCaptchaByPhonenumber(in)
}

func (s *UserServer) DeleteCaptcha(ctx context.Context, in *user.DeleteCaptchaRequest) (*user.DeleteCaptchaResponse, error) {
	l := logic.NewDeleteCaptchaLogic(ctx, s.svcCtx)
	return l.DeleteCaptcha(in)
}

func (s *UserServer) WriteUserLocalInDB(ctx context.Context, in *user.WriteUserLocalRequest) (*user.WriteUserLocalResponse, error) {
	l := logic.NewWriteUserLocalInDBLogic(ctx, s.svcCtx)
	return l.WriteUserLocalInDB(in)
}

func (s *UserServer) WriteUserGoogleInDB(ctx context.Context, in *user.WriteUserGoogleRequest) (*user.WriteUserGoogleResponse, error) {
	l := logic.NewWriteUserGoogleInDBLogic(ctx, s.svcCtx)
	return l.WriteUserGoogleInDB(in)
}
