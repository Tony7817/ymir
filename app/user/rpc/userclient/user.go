// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package userclient

import (
	"context"

	"ymir.com/app/user/rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteCaptchaRequest             = user.DeleteCaptchaRequest
	DeleteCaptchaResponse            = user.DeleteCaptchaResponse
	GetCaptchaByEmailRequest         = user.GetCaptchaByEmailRequest
	GetCaptchaByPhonenumberRequest   = user.GetCaptchaByPhonenumberRequest
	GetCaptchaResponse               = user.GetCaptchaResponse
	GetOssStsTokenRequest            = user.GetOssStsTokenRequest
	GetOssStsTokenResponse           = user.GetOssStsTokenResponse
	GetUserGoogleRequest             = user.GetUserGoogleRequest
	GetUserGoogleResponse            = user.GetUserGoogleResponse
	GetUserInfoRequest               = user.GetUserInfoRequest
	GetUserInfoResponse              = user.GetUserInfoResponse
	GetUserLocalRequest              = user.GetUserLocalRequest
	GetUserLocalResponse             = user.GetUserLocalResponse
	SendCaptchaToEmailRequest        = user.SendCaptchaToEmailRequest
	SendCaptchaToEmailResponse       = user.SendCaptchaToEmailResponse
	SendCaptchaToPhonenumberRequest  = user.SendCaptchaToPhonenumberRequest
	SendCaptchaToPhonenumberResponse = user.SendCaptchaToPhonenumberResponse
	UserGoogleInfo                   = user.UserGoogleInfo
	UserInfo                         = user.UserInfo
	UserLocalInfo                    = user.UserLocalInfo
	WriteUserGoogleRequest           = user.WriteUserGoogleRequest
	WriteUserGoogleResponse          = user.WriteUserGoogleResponse
	WriteUserLocalRequest            = user.WriteUserLocalRequest
	WriteUserLocalResponse           = user.WriteUserLocalResponse

	User interface {
		GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
		GetUserLocal(ctx context.Context, in *GetUserLocalRequest, opts ...grpc.CallOption) (*GetUserLocalResponse, error)
		GetUserGoogle(ctx context.Context, in *GetUserGoogleRequest, opts ...grpc.CallOption) (*GetUserGoogleResponse, error)
		SendCaptchaToEmail(ctx context.Context, in *SendCaptchaToEmailRequest, opts ...grpc.CallOption) (*SendCaptchaToEmailResponse, error)
		SendCaptchaToPhonenumber(ctx context.Context, in *SendCaptchaToPhonenumberRequest, opts ...grpc.CallOption) (*SendCaptchaToPhonenumberResponse, error)
		GetCaptchaByEmail(ctx context.Context, in *GetCaptchaByEmailRequest, opts ...grpc.CallOption) (*GetCaptchaResponse, error)
		GetCaptchaByPhonenumber(ctx context.Context, in *GetCaptchaByPhonenumberRequest, opts ...grpc.CallOption) (*GetCaptchaResponse, error)
		DeleteCaptcha(ctx context.Context, in *DeleteCaptchaRequest, opts ...grpc.CallOption) (*DeleteCaptchaResponse, error)
		WriteUserLocalInDB(ctx context.Context, in *WriteUserLocalRequest, opts ...grpc.CallOption) (*WriteUserLocalResponse, error)
		WriteUserGoogleInDB(ctx context.Context, in *WriteUserGoogleRequest, opts ...grpc.CallOption) (*WriteUserGoogleResponse, error)
		GetOssStsToken(ctx context.Context, in *GetOssStsTokenRequest, opts ...grpc.CallOption) (*GetOssStsTokenResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUser) GetUserLocal(ctx context.Context, in *GetUserLocalRequest, opts ...grpc.CallOption) (*GetUserLocalResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserLocal(ctx, in, opts...)
}

func (m *defaultUser) GetUserGoogle(ctx context.Context, in *GetUserGoogleRequest, opts ...grpc.CallOption) (*GetUserGoogleResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserGoogle(ctx, in, opts...)
}

func (m *defaultUser) SendCaptchaToEmail(ctx context.Context, in *SendCaptchaToEmailRequest, opts ...grpc.CallOption) (*SendCaptchaToEmailResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.SendCaptchaToEmail(ctx, in, opts...)
}

func (m *defaultUser) SendCaptchaToPhonenumber(ctx context.Context, in *SendCaptchaToPhonenumberRequest, opts ...grpc.CallOption) (*SendCaptchaToPhonenumberResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.SendCaptchaToPhonenumber(ctx, in, opts...)
}

func (m *defaultUser) GetCaptchaByEmail(ctx context.Context, in *GetCaptchaByEmailRequest, opts ...grpc.CallOption) (*GetCaptchaResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetCaptchaByEmail(ctx, in, opts...)
}

func (m *defaultUser) GetCaptchaByPhonenumber(ctx context.Context, in *GetCaptchaByPhonenumberRequest, opts ...grpc.CallOption) (*GetCaptchaResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetCaptchaByPhonenumber(ctx, in, opts...)
}

func (m *defaultUser) DeleteCaptcha(ctx context.Context, in *DeleteCaptchaRequest, opts ...grpc.CallOption) (*DeleteCaptchaResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.DeleteCaptcha(ctx, in, opts...)
}

func (m *defaultUser) WriteUserLocalInDB(ctx context.Context, in *WriteUserLocalRequest, opts ...grpc.CallOption) (*WriteUserLocalResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.WriteUserLocalInDB(ctx, in, opts...)
}

func (m *defaultUser) WriteUserGoogleInDB(ctx context.Context, in *WriteUserGoogleRequest, opts ...grpc.CallOption) (*WriteUserGoogleResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.WriteUserGoogleInDB(ctx, in, opts...)
}

func (m *defaultUser) GetOssStsToken(ctx context.Context, in *GetOssStsTokenRequest, opts ...grpc.CallOption) (*GetOssStsTokenResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetOssStsToken(ctx, in, opts...)
}
